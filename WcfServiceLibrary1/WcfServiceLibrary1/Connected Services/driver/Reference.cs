//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfServiceLibrary1.driver {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="StudentsList", Namespace="http://schemas.datacontract.org/2004/07/Model", ItemName="Student")]
    [System.SerializableAttribute()]
    public class StudentsList : System.Collections.Generic.List<Model.Student> {
    }

    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    //[System.Runtime.Serialization.CollectionDataContractAttribute(Name = "CitiesList", Namespace = "http://schemas.datacontract.org/2004/07/Model", ItemName = "City")]
    //[System.SerializableAttribute()]
    //public class CitiesList : System.Collections.Generic.List<Model.City>
    //{
    //}

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="driver.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddStudent", ReplyAction="http://tempuri.org/IService1/AddStudentResponse")]
        bool AddStudent(Model.Student student);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddStudent", ReplyAction="http://tempuri.org/IService1/AddStudentResponse")]
        System.Threading.Tasks.Task<bool> AddStudentAsync(Model.Student student);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllStudents", ReplyAction="http://tempuri.org/IService1/GetAllStudentsResponse")]
        WcfServiceLibrary1.driver.StudentsList GetAllStudents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllStudents", ReplyAction="http://tempuri.org/IService1/GetAllStudentsResponse")]
        System.Threading.Tasks.Task<WcfServiceLibrary1.driver.StudentsList> GetAllStudentsAsync();
        
        //[System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllCities", ReplyAction="http://tempuri.org/IService1/GetAllCitiesResponse")]
        //WcfServiceLibrary1.driver.CitiesList GetAllCities();
        
        //[System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllCities", ReplyAction="http://tempuri.org/IService1/GetAllCitiesResponse")]
        //System.Threading.Tasks.Task<WcfServiceLibrary1.driver.CitiesList> GetAllCitiesAsync();
        
        //[System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCityById", ReplyAction="http://tempuri.org/IService1/GetCityByIdResponse")]
        //Model.City GetCityById(int id);
        
        //[System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCityById", ReplyAction="http://tempuri.org/IService1/GetCityByIdResponse")]
        //System.Threading.Tasks.Task<Model.City> GetCityByIdAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : WcfServiceLibrary1.driver.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<WcfServiceLibrary1.driver.IService1>, WcfServiceLibrary1.driver.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddStudent(Model.Student student) {
            return base.Channel.AddStudent(student);
        }
        
        public System.Threading.Tasks.Task<bool> AddStudentAsync(Model.Student student) {
            return base.Channel.AddStudentAsync(student);
        }
        
        public WcfServiceLibrary1.driver.StudentsList GetAllStudents() {
            return base.Channel.GetAllStudents();
        }
        
        public System.Threading.Tasks.Task<WcfServiceLibrary1.driver.StudentsList> GetAllStudentsAsync() {
            return base.Channel.GetAllStudentsAsync();
        }

    //public WcfServiceLibrary1.driver.CitiesList GetAllCities()
    //{
    //    return base.Channel.GetAllCities();
    //}

    //public System.Threading.Tasks.Task<WcfServiceLibrary1.driver.CitiesList> GetAllCitiesAsync()
    //{
    //    return base.Channel.GetAllCitiesAsync();
    //}

    //public Model.City GetCityById(int id)
    //{
    //    return base.Channel.GetCityById(id);
    //}

    //public System.Threading.Tasks.Task<Model.City> GetCityByIdAsync(int id)
    //{
    //    return base.Channel.GetCityByIdAsync(id);
    //}
}
}
